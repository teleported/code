Python is strongly as well as dynamically typed language.
            |                   |-> No type checking before running the program
            |-> Every variable has a type, no way to circumvent it
Python is NOT a statically typed langiage.
                    |-> Compiler doesn't do typechecking
Python uses Duck typing.
             |-> If it looks like a duck, swims like a duck, 
                 and quacks like a duck, then it probably is a duck.
Python is an interpreted language.
                  |-> Tough the program is converted to bytecode before being 
                      executed, making it subtle to realize that it is not 
                      a truely interpreted language (like shell script for e.g.)
REPL: Read-Eval-Print-Loop
  |-> The command line environment
  |-> '_': One of the few obscure shortcuts. Prints last result. Valid inside REPL.
      Not valid in scripts and programs.
  |-> Not all statements have return value.
        |-> e.g. 'x=5' doesn't have any side effect other than bringing the 
            variable x into being. 
PEP: https://www.google.co.in/#q=python+pep
  |-> Python Enhancement Proposals
Ask for specific help on REPL
  |-> help(math.factorial)
